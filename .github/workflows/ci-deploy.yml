name: CI Deploy

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    if: github.actor == 'wrag20'
    name: Prebuild & EAS Production Builds
    runs-on: macos-latest
    env:
      NODE_ENV: production
      EAS_BUILD_AUTOMATIC_UPDATE: true
      EXPO_TOKEN:   ${{ secrets.EXPO_TOKEN }}
      EAS_PROJECT_ID: ${{ secrets.EAS_PROJECT_ID }}
      # Keystore & credentials.json are decoded directly from secrets in steps
      ASC_KEY_ID:      ${{ secrets.ASC_KEY_ID }}
      ASC_ISSUER_ID:   ${{ secrets.ASC_ISSUER_ID }}
      ASC_PRIVATE_KEY: ${{ secrets.ASC_PRIVATE_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Decode Android Keystore
        run: |
          mkdir -p android
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" \
            | base64 --decode > android/keystore.jks

      - name: Decode iOS distribution cert & profile
        run: |
          mkdir -p ios
          echo "${{ secrets.IOS_P12_BASE64 }}" \
            | base64 --decode > ios/ios_distribution.p12
          echo "${{ secrets.IOS_PROV_BASE64 }}" \
            | base64 --decode > ios/AuroraAgent_App_Store.mobileprovision

      - name: Decode combined credentials.json
        run: |
          echo "${{ secrets.CREDENTIALS_JSON_BASE64 }}" \
            | base64 --decode > credentials.json

      - uses: actions/setup-node@v3
        with:
          node-version: '24.2.0'
      - run: npm install -g eas-cli
      - run: npm install -g expo-cli 

      - run: yarn install --frozen-lockfile
      - run: npx expo prebuild --clean --platform android,ios

      - name: Android production build (CI)
        run: |
          eas build --local \
            --platform android \
            --profile production \
            --non-interactive \
            --output ./android/app/build/outputs/aab/app-release.aab

      - name: iOS production build (CI)
        run: |
          eas build --local \
            --platform ios \
            --profile production \
            --non-interactive \
            --output ./ios/App/build/Archive/Products/Applications/AuroraAgent.app

      - uses: actions/upload-artifact@v4
        with:
          name: aurora-android-aab
          path: android/app/build/outputs/aab/app-release.aab
      - uses: actions/upload-artifact@v4
        with:
          name: aurora-ios-app
          path: ios/App/build/Archive/Products/Applications/AuroraAgent.app
